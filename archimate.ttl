@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix base: <https://purl.org/archimate#> .
@prefix ex: <http://example.org/archimate/> .
@base <https://purl.org/archimate#> .

### Ontology Declaration
<#> rdf:type owl:Ontology ;
    owl:versionInfo "Alpha" ;
    rdf:label "ArchiMate Ontology - RDF-Star Edition" ;
    rdfs:comment "An RDF-Star compliant ontology for the ArchiMate modeling language with relationship metadata support." ;
    dct:title "ArchiMate Ontology" ;
    dct:description "An RDF-Star based ontology for the ArchiMate modeling language supporting relationship attributes." ;
    dct:creator "Alberto D. Mendoza" ;
    dct:publisher <https://purl.org/archimate> ;
    dct:contributor [
        rdf:type foaf:Person ;
        foaf:name "Alberto D. Mendoza" ;
        foaf:weblog <https://albertodmendoza.net>
    ] ;
    dct:created "2024-06-14"^^xsd:date ;
    dct:modified "2025-07-04"^^xsd:date .

# NOTES 
# This is a Work in Progress and not remotely a complete ontology file for ArchiMate. 
# SKOS file only has only definitions.  This one is a mix bag of Thesaurus and Ontology (I might need to pick one approach, still not sure).
# Includes Full Framework (SKOS file does not have the full framework *yet*).
# Rewritten Relationships to leverage RDF-Star which supports relationship attributes.
# Expanding SHACL constrains.  File is getting unwielding, hard to maintain. (Very inclined to split for Beta). 

# TODO
# Add *All* Derivation Rules <-- the whole reason why I'm trying to do this.
# Figure out Specializations and Profiles
# Add Relationship Connectors

# UPDATES
# 2025-07-04 Redid Relationships with RDF-Star, added SHACL for relationships. changed version to Alpha
# 2025-06-04 Added DR1.
#

### 0. General Definitions

# Using SKOS
<#EnterpriseArchitecture> rdf:type skos:Concept ;
    rdfs:label "Enterprise Architecture" ;
    rdfs:comment "The practice of analyzing, designing, planning, and implementing enterprise analysis to successfully execute on business strategies." .

<#VisualLanguage> rdf:type skos:Concept ;
    rdfs:label "Visual Language" ;
    rdfs:comment "A type of language that uses visual elements to convey meaning." .

# Defining ArchiMate as a SKOS concept scheme
<#ArchiMateConcept> rdf:type skos:ConceptScheme ;
    skos:prefLabel "ArchiMate" ;
    skos:definition "A visual language for enterprise architecture." ;
    rdfs:subClassOf <#VisualLanguage>, <#EnterpriseArchitecture> ;
    skos:inScheme <#EnterpriseArchitectureScheme> .

# Define ArchiMate as an OWL class and link it to the SKOS concept
<#ArchiMateClass> rdf:type owl:Class ;
    rdfs:label "ArchiMate" ;
    skos:exactMatch <#ArchiMate> .


### 1. ArchiMate Specification in RDF

## 1.0 ArchiMate Definitions
<#ArchiMate> rdf:type owl:Class ;
	rdfs:label "ArchiMate" ;
	rdfs:comment "ArchiMate Enterprise Architecture modeling language, a visual language with a set of default iconography for describing, analyzing, and communicating many concerns of Enterprise Architectures as they change over time. The standard provides a set of entities and relationships with their corresponding iconography for the representation of Architecture Descriptions." ;
	rdfs:subClassOf owl:Thing ;
	skos:exactMatch <#ArchiMate> .
	
<#ArchiMateCoreFramework> rdf:type skos:Concept ;
    rdfs:label "ArchiMate Core Framework" ;
    rdfs:comment "A reference structure used to classify elements of the ArchiMate Core language. It consists of three layers and three aspects." ;
    rdfs:subClassOf <#ArchiMate> .

<#ArchiMateCoreLanguage> rdf:type skos:Concept ;
	rdfs:label "ArchiMate Core Language";
	rdfs:comment "The central part of the ArchiMate language that defines the concepts to model Enterprise Architectures. It includes concepts from three layers: Business, Application, and Technology (including Physical).";
	rdfs:subClassOf <#ArchiMate> .

<#ArchitectureView> rdf:type owl:Class ;
	rdfs:label "Architecture View";
	rdfs:comment "A representation of a system from the perspective of a related set of concerns.";
	rdfs:subClassOf <#ArchiMate> .

<#ArchitectureViewpoint> rdf:type owl:Class ;
	rdfs:label "Architecture Viewpoint";
	rdfs:comment "A specification of the conventions for a particular kind of architecture view.";
	rdfs:subClassOf <#ArchiMate> .

<#Aspect> rdf:type owl:Class ;
    rdfs:label "Aspect" ;
    rdfs:comment "Classification of elements based on layer-independent characteristics related to the concerns of different stakeholders. Used for positioning elements in the ArchiMate metamodel." ;
    rdfs:subClassOf <#ArchiMate> .
	
<#Attribute> rdf:type owl:Class ;
	rdfs:label "Attribute";
	rdfs:comment "A property associated with an ArchiMate language element or relationship.";
	rdfs:subClassOf <#ArchiMate> .

<#Model> rdf:type owl:Class ;
    rdfs:label "Model" ;
    rdfs:comment "A model contains elements and relationships within an architecture." ;
    rdfs:subClassOf <#ArchiMate> .

<#Concept> rdf:type owl:Class ;
    rdfs:label "Concept" ;
    rdfs:comment "A conceptual entity within the ArchiMate modeling language." ;
    rdfs:subClassOf <#Model> .

<#Element> rdf:type owl:Class ;
    rdfs:label "Element" ;
    rdfs:comment "A fundamental building block within an architecture model." ;
    rdfs:subClassOf <#Concept> .

<#Relationship> rdf:type owl:Class ;
    rdfs:label "Relationship" ;
    rdfs:comment "A relationship between two elements within an architecture model." ;
    rdfs:subClassOf <#Concept> .

<#RelationshipConnector> rdf:type owl:Class ;
    rdfs:label "Relationship Connector" ;
    rdfs:comment "A connector element that connects relationships between elements." ;
    rdfs:subClassOf <#Concept> .


# Aspects
<#StructureElement> rdf:type owl:Class ;
    rdfs:label "Structure Element" ;
    rdfs:comment "" ;
    rdfs:subClassOf <#Element> .

<#ActiveStructure> rdf:type owl:Class ;
    rdfs:label "Active Structure" ;
    rdfs:comment "A category of elements that perform behavior and collaborate to provide services." ;
    rdfs:subClassOf <#StructureElement> .
	
<#ExternalActiveStructure> rdf:type owl:Class ;
    rdfs:label "External Active Structure" ;
    rdfs:comment "A category of external active structure elements (also called interfaces) that perform behavior and collaborate to provide services." ;
    rdfs:subClassOf <#ActiveStructure> .
	
<#InternalActiveStructure> rdf:type owl:Class ;
    rdfs:label "Internal Active Structure" ;
    rdfs:comment "A category of internal elements that perform behavior and collaborate to provide services." ;
    rdfs:subClassOf <#ActiveStructure> .

<#PassiveStructure> rdf:type owl:Class ;
    rdfs:label "Passive Structure" ;
    rdfs:comment "Represents structural elements that are used or produced by behavior elements." ;
    rdfs:subClassOf <#StructureElement> .

<#BehaviorElement> rdf:type owl:Class ;
    rdfs:label "Behavior" ;
    rdfs:comment "Represents elements that define the behavior performed by active structure elements." ;
    rdfs:subClassOf <#Element> .

<#InternalBehavior> rdf:type owl:Class ;
    rdfs:label "Internal Behavior" ;
    rdfs:comment "An internal behavior element represents a unit of activity that can be performed by one or more active structure elements." ;
    rdfs:subClassOf <#BehaviorElement> .	

<#ExternalBehavior> rdf:type owl:Class ;
    rdfs:label "External Behavior" ;
    rdfs:comment "Represents external elements (also called services) that define the behavior performed by active structure elements." ;
    rdfs:subClassOf <#BehaviorElement> .

<#MotivationElement> rdf:type owl:Class ;
    rdfs:label "Motivation" ;
    rdfs:comment "A cross-cutting aspect that represents drivers, goals, requirements, and principles in an enterprise architecture." ;
    rdfs:subClassOf <#Element> .

<#CompositeElement> rdf:type owl:Class ;
    rdfs:label "CompositeElement" ;
    rdfs:comment "An element that does not necessarily fit in a single aspect of the framework but may combine two or more aspects." ;
    rdfs:subClassOf <#Element> .

# Layers
<#Layer> rdf:type owl:Class ;
    rdfs:label "Layer" ;
    rdfs:comment "A major division in the architecture that categorizes elements according to their scope and purpose." ;
    rdfs:subClassOf <#Concept> .

<#StrategyLayer> rdf:type owl:Class ;
    rdfs:label "Strategy Layer" ;
    rdfs:comment "Represents elements that define an organization's strategic direction and choices." ;
    rdfs:subClassOf <#Layer> .

<#BusinessLayer> rdf:type owl:Class ;
    rdfs:label "Business Layer" ;
    rdfs:comment "Represents elements and relationships that describe the organization's business functions and processes." ;
    rdfs:subClassOf <#Layer> .
	
<#ApplicationLayer> rdf:type owl:Class ;
    rdfs:label "Application Layer" ;
    rdfs:comment "Represents the software applications and their components that support business processes and provide services to users and other applications." ;
    rdfs:subClassOf <#Layer> .

<#TechnologyLayer> rdf:type owl:Class ;
    rdfs:label "Technology Layer" ;
    rdfs:comment "Represents the physical and software infrastructure that supports the Application Layer and, ultimately, the Business Layer. It focuses on the hardware, software, and networking components required to run applications and deliver business functionality." ;
    rdfs:subClassOf <#Layer> .

<#PhysicalLayer> rdf:type owl:Class ;
    rdfs:label "Physical Layer" ;
    rdfs:comment "Represents physical equipment, materials, and distribution networks used to carry out business activities." ;
    rdfs:subClassOf <#Layer> .

<#ImplementationAndMigrationLayer> rdf:type owl:Class ;
    rdfs:label "Implementation and Migration Layer" ;
    rdfs:comment "Represents elements related to projects, programs, and transition architectures." ;
    rdfs:subClassOf <#Layer> .





## 1.1 Motivation Elements

<#Stakeholder> rdf:type owl:Class ;
    rdfs:label "Stakeholder" ;
    rdfs:comment "An individual or group with an interest in the architecture." ;
    rdfs:subClassOf <#Motivation> .

<#Driver> rdf:type owl:Class ;
    rdfs:label "Driver" ;
    rdfs:comment "An external or internal factor that influences architecture decisions." ;
    rdfs:subClassOf <#Motivation> .

<#Assessment> rdf:type owl:Class ;
    rdfs:label "Assessment" ;
    rdfs:comment "An evaluation of an architecture driver, such as a SWOT analysis." ;
    rdfs:subClassOf <#Motivation> .

<#Goal> rdf:type owl:Class ;
    rdfs:label "Goal" ;
    rdfs:comment "A high-level outcome that an enterprise aims to achieve." ;
    rdfs:subClassOf <#Motivation> .

<#Outcome> rdf:type owl:Class ;
    rdfs:label "Outcome" ;
    rdfs:comment "A measurable result that contributes to achieving a goal." ;
    rdfs:subClassOf <#Motivation> .

<#Principle> rdf:type owl:Class ;
    rdfs:label "Principle" ;
    rdfs:comment "A fundamental guideline for architecture decision-making." ;
    rdfs:subClassOf <#Motivation> .

<#Requirement> rdf:type owl:Class ;
    rdfs:label "Requirement" ;
    rdfs:comment "A specific need that must be met by the architecture." ;
    rdfs:subClassOf <#Motivation> .

<#Constraint> rdf:type owl:Class ;
    rdfs:label "Constraint" ;
    rdfs:comment "A limitation or restriction affecting architecture decisions." ;
    rdfs:subClassOf <#Motivation> .

<#Value> rdf:type owl:Class ;
    rdfs:label "Value" ;
    rdfs:comment "The importance or worth of a concept in the enterprise." ;
    rdfs:subClassOf <#Motivation> .

<#Meaning> rdf:type owl:Class ;
    rdfs:label "Meaning" ;
    rdfs:comment "The definition or interpretation of a concept in a specific context." ;
    rdfs:subClassOf <#Motivation> .



## 1.2 Strategy Elements

# Active Structure Elements
<#Resource> rdf:type owl:Class ;
    rdfs:label "Resource" ;
    rdfs:comment "An asset owned or controlled by an individual or organization." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#StrategyLayer> ;
    rdfs:subClassOf <#Element> .

# Behavior Elements
<#Capability> rdf:type owl:Class ;
    rdfs:label "Capability" ;
    rdfs:comment "An ability that an active structure element possesses." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#StrategyLayer> ;
    rdfs:subClassOf <#Element> .

<#CourseOfAction> rdf:type owl:Class ;
    rdfs:label "Course of Action" ;
    rdfs:comment "An approach or plan for configuring some capabilities and resources of the enterprise." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#StrategyLayer> ;
    rdfs:subClassOf <#Element> .

<#ValueStream> rdf:type owl:Class ;
    rdfs:label "Value Stream" ;
    rdfs:comment "A sequence of activities that create an overall result for a customer, stakeholder, or end user." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#StrategyLayer> ;
    rdfs:subClassOf <#Element> .



## 1.3 Business Layer Elements

# Active Structure Elements
<#BusinessActor> rdf:type owl:Class ;
    rdfs:label "Business Actor" ;
    rdfs:comment "An organizational entity that is capable of performing behavior." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessRole> rdf:type owl:Class ;
    rdfs:label "Business Role" ;
    rdfs:comment "The responsibility for performing specific behavior, to which an actor can be assigned." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessCollaboration> rdf:type owl:Class ;
    rdfs:label "Business Collaboration" ;
    rdfs:comment "An aggregate of two or more business roles that work together to perform collective behavior." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessInterface> rdf:type owl:Class ;
    rdfs:label "Business Interface" ;
    rdfs:comment "A point of access where a business service is made available to the environment." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

# Behavior Elements
<#BusinessProcess> rdf:type owl:Class ;
    rdfs:label "Business Process" ;
    rdfs:comment "A sequence of business behaviors that achieve a specific outcome." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessFunction> rdf:type owl:Class ;
    rdfs:label "Business Function" ;
    rdfs:comment "A collection of business behavior based on a chosen set of criteria (typically required skills, resources, etc.) and closely aligned to an organization." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessService> rdf:type owl:Class ;
    rdfs:label "Business Service" ;
    rdfs:comment "An explicitly defined exposed business behavior." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessInteraction> rdf:type owl:Class ;
    rdfs:label "Business Interaction" ;
    rdfs:comment "A unit of collective business behavior performed by two or more business actors, business roles, or business collaborations." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessEvent> rdf:type owl:Class ;
    rdfs:label "Business Event" ;
    rdfs:comment "Represents a business-related state change." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

# Passive Structure Elements
<#BusinessObject> rdf:type owl:Class ;
    rdfs:label "Business Object" ;
    rdfs:comment "Represents a concept used within a particular business domain." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#BusinessContract> rdf:type owl:Class ;
    rdfs:label "Business Constract" ;
    rdfs:comment "Represents a formal or informal specification of an agreement between a provider and a consumer that specifies the rights and obligations associated with a product and establishes functional and non-functional parameters for interaction." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#Representation> rdf:type owl:Class ;
    rdfs:label "Representation" ;
    rdfs:comment "A perceptible form of the information carried by a business object." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#Element> .

<#Product> rdf:type owl:Class ;
    rdfs:label "Product" ;
    rdfs:comment "Represents a coherent collection of services and/or passive structure elements, accompanied by a contract, which is offered as a whole to (internal or external) customers." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#BusinessLayer> ;
    rdfs:subClassOf <#CompositeElement> .


## 1.4 Application Layer Elements

# Active Structure Elements
<#ApplicationComponent> rdf:type owl:Class ;
    rdfs:label "Application Component" ;
    rdfs:comment "An encapsulation of application functionality aligned to implementation structure, which is modular and replaceable." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .

<#ApplicationCollaboration> rdf:type owl:Class ;
    rdfs:label "Application Collaboration" ;
    rdfs:comment "Represents an aggregate of two or more application internal active structure elements that work together to perform collective application behavior." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .

<#ApplicationInterface> rdf:type owl:Class ;
    rdfs:label "Application Interface`" ;
    rdfs:comment "Represents a point of access where application services are made available to a user, another application component, or a node." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .

# Behavior Elements
<#ApplicationFunction> rdf:type owl:Class ;
    rdfs:label "Application Function" ;
    rdfs:comment "Represents an automated behavior that can be performed by an application component." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .	

<#ApplicationInteraction> rdf:type owl:Class ;
    rdfs:label "Application Interaction" ;
    rdfs:comment "an encapsulation of application functionality aligned to implementation structure, which is modular and replaceable." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .	
	
<#ApplicationProcess> rdf:type owl:Class ;
    rdfs:label "Application Process" ;
    rdfs:comment " Addresses a set of related concerns and is tailored for specific stakeholders.  A View is specified by means of a Viewpoint, which prescribes the concepts, models, analysis techniques, and visualizations that are provided by the View.  The same elements from the Model Tree can be re-used multiple times in the same or different View." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .

<#ApplicationEvent> rdf:type owl:Class ;
    rdfs:label "Application Event" ;
    rdfs:comment "An application event represents an application state change." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .

<#ApplicationService> rdf:type owl:Class ;
    rdfs:label "Application Service" ;
    rdfs:comment "represents an explicitly defined exposed application behavior." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .	

# Passive Structure Elements 
<#DataObject> rdf:type owl:Class ;
    rdfs:label "Data Object" ;
    rdfs:comment "Represents data structured for automated processing." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#ApplicationLayer> ;
    rdfs:subClassOf <#Element> .		


## 1.5 Technology Layer Elements

# Active Structure Elements
<#Node> rdf:type owl:Class ;
    rdfs:label "Node" ;
    rdfs:comment "A computational or physical resource that hosts, manipulates, or interacts with other computational or physical resources." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .

<#Device> rdf:type owl:Class ;
    rdfs:label "Device" ;
    rdfs:comment "A physical IT resource upon which system software and artifacts may be stored or deployed for execution." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .
	
<#SystemSoftware> rdf:type owl:Class ;
    rdfs:label "System Software" ;
    rdfs:comment "Software that provides or contributes to an environment for storing, executing, and using software or data deployed within it." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .

<#TechnologyCollaboration> rdf:type owl:Class ;
    rdfs:label "Technology Collaboration" ;
    rdfs:comment "An aggregate of two or more technology internal active structure elements that work together to perform collective technology behavior." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .	
	
<#TechnologyInterface> rdf:type owl:Class ;
    rdfs:label "Technology Interface" ;
    rdfs:comment "A technology collaboration represents an aggregate of two or more technology internal active structure elements that work together to perform collective technology behavior." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .	

<#Path> rdf:type owl:Class ;
    rdfs:label "Path" ;
    rdfs:comment "A link between two or more technology internal active structure elements, through which these elements can exchange data, energy, or material." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .

<#CommunicationNetwork> rdf:type owl:Class ;
    rdfs:label "Communication Network" ;
    rdfs:comment "A set of structures that connects devices or system software for transmission, routing, and reception of data." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .
	
# Behavior Elements
<#TechnologyFunction> rdf:type owl:Class ;
    rdfs:label "Technology Function" ;
    rdfs:comment "A collection of technology behavior that can be performed by a technology internal active structure element." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .

<#TechnologyProcess> rdf:type owl:Class ;
    rdfs:label "Technology Process" ;
    rdfs:comment "A sequence of technology behaviors that achieves a specific result." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .
	
<#TechnologyInteraction> rdf:type owl:Class ;
    rdfs:label "Technology Interaction" ;
    rdfs:comment "A unit of collective technology behavior performed by (a collaboration of) two or more technology internal active structure elements." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .
	
<#TechnologyEvent> rdf:type owl:Class ;
    rdfs:label "Technology Event" ;
    rdfs:comment "A technology event represents a technology state change." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .
	
<#TechnologyService> rdf:type owl:Class ;
    rdfs:label "Technology Service" ;
    rdfs:comment "An explicitly defined exposed technology behavior." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .

# Passive Structure Elements 
<#Artifact> rdf:type owl:Class ;
    rdfs:label "Artifact" ;
    rdfs:comment "A piece of data that is used or produced in a software development process, or by deployment and operation of an IT system." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#TechnologyLayer> ;
    rdfs:subClassOf <#Element> .


## 1.6 Physical Elements

# Active Structure Elements
<#Equipment> rdf:type owl:Class ;
    rdfs:label "Equipment" ;
    rdfs:comment "One or more physical machines, tools, or instruments that can create, use, store, move, or transform materials." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#PhysicalLayer> ;
    rdfs:subClassOf <#Element> .

<#Facility> rdf:type owl:Class ;
    rdfs:label "Facility" ;
    rdfs:comment "A physical structure or environment." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#PhysicalLayer> ;
    rdfs:subClassOf <#Element> .

<#DistributionNetwork> rdf:type owl:Class ;
    rdfs:label "Distribution Network" ;
    rdfs:comment "A physical network used to transport materials or energy." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#PhysicalLayer> ;
    rdfs:subClassOf <#Element> .

# Passive Structure Elements
<#Material> rdf:type owl:Class ;
    rdfs:label "Material" ;
    rdfs:comment "Tangible physical matter or physical elements." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#PhysicalLayer> ;
    rdfs:subClassOf <#Element> .


## 1.7 Implementation and Migration Elements

# Active Structure Elements
<#WorkPackage> rdf:type owl:Class ;
    rdfs:label "Work Package" ;
    rdfs:comment "A series of actions identified and designed to achieve specific results." ;
    rdfs:subClassOf <#ActiveStructure> ;
    rdfs:subClassOf <#ImplementationAndMigrationLayer> ;
    rdfs:subClassOf <#Element> .

# Behavior Elements
<#ImplementationEvent> rdf:type owl:Class ;
    rdfs:label "Implementation Event" ;
    rdfs:comment "A state change related to implementation or migration." ;
    rdfs:subClassOf <#Behavior> ;
    rdfs:subClassOf <#ImplementationAndMigrationLayer> ;
    rdfs:subClassOf <#Element> .

# Passive Structure Elements
<#Deliverable> rdf:type owl:Class ;
    rdfs:label "Deliverable" ;
    rdfs:comment "A precisely-defined outcome of a work package." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#ImplementationAndMigrationLayer> ;
    rdfs:subClassOf <#Element> .

<#Gap> rdf:type owl:Class ;
    rdfs:label "Gap" ;
    rdfs:comment "A statement of difference between two states." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#ImplementationAndMigrationLayer> ;
    rdfs:subClassOf <#Element> .

<#Plateau> rdf:type owl:Class ;
    rdfs:label "Plateau" ;
    rdfs:comment "A relatively stable state of the architecture that exists during a limited period of time." ;
    rdfs:subClassOf <#PassiveStructure> ;
    rdfs:subClassOf <#ImplementationAndMigrationLayer> ;
    rdfs:subClassOf <#Element> .


## 1.8 Composite Elements

<#Grouping> rdf:type owl:Class ;
    rdfs:label "Grouping" ;
    rdfs:comment "An element that aggregates or composes concepts that belong together based on some common characteristic." ;
    rdfs:subClassOf <#CompositeElement> ;
    rdfs:subClassOf <#Element> .

<#Location> rdf:type owl:Class ;
    rdfs:label "Location" ;
    rdfs:comment "A conceptual or physical place or position where concepts are located or performed." ;
    rdfs:subClassOf <#CompositeElement> ;
    rdfs:subClassOf <#Element> .


### 2. Relationships

## 2.1 Base Relationship Properties
<#structuralRelationship> rdf:type owl:ObjectProperty ;
    rdfs:label "structural relationship" ;
    rdfs:comment "Base property for structural relationships that define static construction or composition." ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

<#dependencyRelationship> rdf:type owl:ObjectProperty ;
    rdfs:label "dependency relationship" ;
    rdfs:comment "Base property for dependency relationships between elements." ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

<#dynamicRelationship> rdf:type owl:ObjectProperty ;
    rdfs:label "dynamic relationship" ;
    rdfs:comment "Base property for dynamic behavioral relationships." ;
    rdfs:domain <#Behavior> ;
    rdfs:range <#Behavior> .

<#otherRelationship> rdf:type owl:ObjectProperty ;
    rdfs:label "Other Relationship" ;
    rdfs:comment "Other types of relationships not covered by structural, dependency, or dynamic relationships." ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .


## 2.2 Relationships

# Structural Relationships
<#assignment> rdf:type owl:ObjectProperty ;
    rdfs:label "assignment" ;
    rdfs:comment "Links active structure elements with behavior that they perform or roles they fulfill." ;
    rdfs:subPropertyOf <#structuralRelationship> ;
    rdfs:domain <#ActiveStructure> ;
    rdfs:range <#Behavior> .

<#aggregation> rdf:type owl:ObjectProperty ;
    rdfs:label "aggregation" ;
    rdfs:comment "Models a whole-part relationship where parts can exist independently." ;
    rdfs:subPropertyOf <#structuralRelationship> ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

<#composition> rdf:type owl:ObjectProperty ;
    rdfs:label "composition" ;
    rdfs:comment "Models a whole-part relationship where parts cannot exist without the whole." ;
    rdfs:subPropertyOf <#structuralRelationship> ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

<#realization> rdf:type owl:ObjectProperty ;
    rdfs:label "realization" ;
    rdfs:comment "Indicates that an entity realizes or implements another entity." ;
    rdfs:subPropertyOf <#structuralRelationship> ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

# Dependency Relationships  
<#serving> rdf:type owl:ObjectProperty ;
    rdfs:label "serving" ;
    rdfs:comment "Models that an element provides functionality to another element." ;
    rdfs:subPropertyOf <#dependencyRelationship> ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

<#access> rdf:type owl:ObjectProperty ;
    rdfs:label "access" ;
    rdfs:comment "Models access of behavior elements to passive structure elements." ;
    rdfs:subPropertyOf <#dependencyRelationship> ;
    rdfs:domain <#Behavior> ;
    rdfs:range <#PassiveStructure> .

<#influence> rdf:type owl:ObjectProperty ;
    rdfs:label "influence" ;
    rdfs:comment "Models how one element influences another element." ;
    rdfs:subPropertyOf <#dependencyRelationship> ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

<#association> rdf:type owl:ObjectProperty ;
    rdfs:label "association" ;
    rdfs:comment "Models a relationship not covered by other specific relationship types." ;
    rdfs:subPropertyOf <#dependencyRelationship> ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> .

# Dynamic Relationships
<#triggering> rdf:type owl:ObjectProperty ;
    rdfs:label "triggering" ;
    rdfs:comment "Models temporal or causal relationships where one behavior triggers another." ;
    rdfs:subPropertyOf <#dynamicRelationship> ;
    rdfs:domain <#Behavior> ;
    rdfs:range <#Behavior> .

<#flow> rdf:type owl:ObjectProperty ;
    rdfs:label "flow" ;
    rdfs:comment "Models transfer of information, materials, or energy between behavior elements." ;
    rdfs:subPropertyOf <#dynamicRelationship> ;
    rdfs:domain <#Behavior> ;
    rdfs:range <#Behavior> .

# Other Relationships
<#specialization> rdf:type owl:ObjectProperty ;
    rdfs:label "specialization" ;
    rdfs:comment "Indicates that an element is a more specific form of another element." ;
    rdfs:domain <#Element> ;
    rdfs:range <#Element> ;
    rdf:type owl:TransitiveProperty .

## 2.3 RDF-Star Relationship Metadata Properties

# General Relationship Metadata
<#relationshipId> rdf:type owl:DatatypeProperty ;
    rdfs:label "relationship ID" ;
    rdfs:comment "Unique identifier for a relationship instance." ;
    rdfs:range xsd:string .

<#relationshipName> rdf:type owl:DatatypeProperty ;
    rdfs:label "relationship name" ;
    rdfs:comment "Human-readable name for a relationship instance." ;
    rdfs:range xsd:string .

<#description> rdf:type owl:DatatypeProperty ;
    rdfs:label "description" ;
    rdfs:comment "Textual description of the relationship." ;
    rdfs:range xsd:string .

<#createdBy> rdf:type owl:DatatypeProperty ;
    rdfs:label "created by" ;
    rdfs:comment "Person or system that created this relationship." ;
    rdfs:range xsd:string .

<#createdDate> rdf:type owl:DatatypeProperty ;
    rdfs:label "created date" ;
    rdfs:comment "Date when the relationship was created." ;
    rdfs:range xsd:dateTime .

<#lastModified> rdf:type owl:DatatypeProperty ;
    rdfs:label "last modified" ;
    rdfs:comment "Date when the relationship was last modified." ;
    rdfs:range xsd:dateTime .

<#confidence> rdf:type owl:DatatypeProperty ;
    rdfs:label "confidence" ;
    rdfs:comment "Confidence level in the relationship, if derived (e.g., valid, potential). " ;
    rdfs:range xsd:string .


# Access Relationship Specific Properties
<#accessType> rdf:type owl:DatatypeProperty ;
    rdfs:label "access type" ;
    rdfs:comment "Type of access: read, write, readwrite, or unspecified." ;
    rdfs:range xsd:string .

# Influence Relationship Specific Properties  
<#influenceSign> rdf:type owl:DatatypeProperty ;
    rdfs:label "influence sign" ;
    rdfs:comment "Sign of the influence: positive, negative, or unspecified." ;
    rdfs:range xsd:string .

<#influenceStrength> rdf:type owl:DatatypeProperty ;
    rdfs:label "influence strength" ;
    rdfs:comment "Strength of the influence: weak, moderate, strong, or unspecified." ;
    rdfs:range xsd:string .

# Flow Relationship Specific Properties
<#flowType> rdf:type owl:DatatypeProperty ;
    rdfs:label "flow type" ;
    rdfs:comment "Type of flow: information, material, energy, or unspecified." ;
    rdfs:range xsd:string .


## 2.4 SHACL Validation Rules for RDF-Star

# Validate Access Type Values
ex:AccessTypeValidation rdf:type sh:NodeShape ;
    rdfs:label "Access Type Validation" ;
    sh:targetSubjectsOf <#access> ;
    sh:sparql [
        sh:message "Access relationships must have valid access types: read, write, readwrite, or unspecified" ;
        sh:select """
            SELECT $this WHERE {
                <<?this access ?target>> ?statement .
                ?statement <#accessType> ?accessType .
                FILTER(?accessType NOT IN ("read", "write", "readwrite", "unspecified"))
            }
        """
    ] .

# Validate Influence Sign Values  
ex:InfluenceSignValidation rdf:type sh:NodeShape ;
    rdfs:label "Influence Sign Validation" ;
    sh:targetSubjectsOf <#influence> ;
    sh:sparql [
        sh:message "Influence relationships must have valid signs: positive, negative, or unspecified" ;
        sh:select """
            SELECT $this WHERE {
                <<?this influence ?target>> ?statement .
                ?statement <#influenceSign> ?sign .
                FILTER(?sign NOT IN ("positive", "negative", "unspecified"))
            }
        """
    ] .

# Validate Relationship ID Uniqueness
ex:RelationshipIdUniqueness rdf:type sh:NodeShape ;
    rdfs:label "Relationship ID Uniqueness" ;
    sh:sparql [
        sh:message "Relationship IDs must be unique across all relationships" ;
        sh:select """
            SELECT ?id WHERE {
                {
                    <<?s1 ?p1 ?o1>> ?stmt1 .
                    ?stmt1 <#relationshipId> ?id .
                }
                {
                    <<?s2 ?p2 ?o2>> ?stmt2 .
                    ?stmt2 <#relationshipId> ?id .
                }
                FILTER(?stmt1 != ?stmt2)
            }
        """
    ] .

### 3. Relationship Tables

# SEE: ArchiMate Normative Specification



### 4. Specification of Derivation Rules

## 4.1 Valid Relationships

# DR1 Valid Derivations for Specialization Relationships
<#Specializes> rdf:type <#Specialization> ;
    rdf:type owl:TransitiveProperty ;
    rdfs:label "specializes" ;
    skos:altLabel "is a" ;
    skos:exactMatch <#Specialization> ;
    rdfs:comment "If p(a,b):S and q(b,c):S exist, then r(a,c):S can be derived. S being Specialization" .

# SHACL Rule for Transitivity of Specialization
INSERT {
    ?source base:specializes ?target .
    <<?source base:specializes ?target>> {
        rdf:type base:SpecializationRelationship ;
        base:relationshipId ?newId ;
        base:derivedFrom "DR1_transitivity" ;
        base:confidence "valid" ;
        base:derivationChain (?intermediate) ;
        base:sourceRelationship ?rel1 ;
        base:sourceRelationship ?rel2 ;
        base:createdDate ?now ;
        base:createdBy "inference_engine" ;
        rdfs:label ?label .
    }
}
WHERE {
    # Find the transitive pattern
    <<?source base:specializes ?intermediate>> ?rel1 .
    <<?intermediate base:specializes ?target>> ?rel2 .
    
    # Get confidence from source relationships
    ?rel1 base:confidence ?conf1 .
    ?rel2 base:confidence ?conf2 .
    
    # Only derive if both source relationships are valid
    FILTER(?conf1 IN ("asserted", "derived", "valid"))
    FILTER(?conf2 IN ("asserted", "derived", "valid"))
    
    # Avoid cycles and self-references
    FILTER(?source != ?target)
    FILTER(?source != ?intermediate)
    FILTER(?intermediate != ?target)
    
    # Don't create if relationship already exists
    FILTER NOT EXISTS {
        <<?source base:specializes ?target>> ?existing .
    }
    
    # Generate metadata
    BIND(CONCAT("derived_spec_", STRUUID()) AS ?newId)
    BIND(NOW() AS ?now)
    BIND(CONCAT("Derived: ", STR(?source), " specializes ", STR(?target)) AS ?label)
}

# DR 2: Derivation Between Structural Relationships
# If two relationships p(a,b):S and q(b,c):T exist, with S and T being structural relationships, then a relationship r(a,c):U can be derived, with U being the weakest of S and T.
# Relationship strength ordering (from strongest to weakest)
# 1. Composition (strongest) - parts cannot exist without whole
# 2. Aggregation - parts can exist independently  
# 3. Assignment - active structure assigned to behavior
# 4. Realization (weakest) - one element realizes another

# DR 3: Derivation Between Structural and Dependency Relationships
# If two relationships p(a,b):S and q(b,c):T exist, with S being a structural relationship and T being a dependency relationship, then a relationship r(a,c):T can be derived.

# DR 4: Derivation Between Opposing Structural and Dependency Relationships
# If two relationships p(a,b):S and q(c,b):T exist, with S being a structural relationship and T being a dependency relationship, then a relationship r(c,a):T can be derived.

# DR 5: Derivation Between Structural and Dynamic Relationships
# If two relationships p(a,b):S and q(b,c):T exist, with S being a structural relationship and T being a dynamic relationship, then a relationship r(a,c):T can be derived.

# DR 6: Derivation Between Structural and Flow Relationships
# If two relationships p(a,b):S and q(c,b):T exist, with S being a structural relationship and T being Flow, then a relationship r(c,a):T can be derived.

# DR 7: Derivation Between Structural and Triggering Relationships
# If two relationships p(a,b):S and q(b,c):T exist, with S being Triggering and T being a structural relationship, then a relationships r(a,c):S can be derived.

# DR 8: Derivation Between Triggering Relationships
# If two relationships p(a,b):S and q(b,c):S exist, with S being Triggering, then a relationship r(a,c):S can be derived.


## 4.2 Potential Relationships

## 4.3 Restrictions on Applying Derivation Rules


### 5.  Validation Queries for Completeness

# SPARQL query to find all relationships derived by DR1
ex:ValidationQuery ex:sparqlText 
"""
SELECT ?source ?target ?relationshipId ?derivationChain
WHERE {
    <<?source base:specializes ?target>> {
        base:relationshipId ?relationshipId ;
        base:derivedFrom "DR1_transitivity" ;
        base:derivationChain ?derivationChain .
    }
} 
""" .

# SPARQL query to check if all possible transitive relationships have been derived
ex:ValidationQuery ex:sparqlText 
"""
SELECT ?a ?c 
WHERE {
    ?a base:specializes ?b .
    ?b base:specializes ?c .
    
    # Check if the transitive relationship is missing
    FILTER NOT EXISTS {
        ?a base:specializes ?c .
    }
}
""" .
